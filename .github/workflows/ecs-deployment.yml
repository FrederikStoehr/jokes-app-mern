# https://docs.github.com/en/actions/tutorials/publish-packages/publish-docker-images
# https://github.com/marketplace/actions/docker-login
# https://github.com/marketplace/actions/docker-metadata-action
# https://github.com/marketplace/actions/build-and-push-docker-images
# https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
# https://github.com/marketplace/actions/amazon-ecs-render-task-definition-action-for-github-actions
# https://github.com/marketplace/actions/amazon-ecs-deploy-task-definition-action-for-github-actions

name: Build and Deploy to ECS
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  NODE_IMAGE_NAME: docker-02
  REACT_IMAGE_NAME: docker-03
  ECS_CLUSTER_NAME: Docker-Course-ECS-Cluster-01
  ECS_SERVICE_NAME: Docker-Course-ECS-Service-01
  ECS_TASK_DEFINITION: Docker-Course-ECS-Task-01
  ECS_CONTAINER_NODE_NAME: nodeappcontainer
  ECS_CONTAINER_REACT_NAME: reactappcontainer

jobs:
  build-image-node:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Add details to image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.NODE_IMAGE_NAME }}
          tags: |
            latest
            v1.0.${{ github.run_number }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./API-jokes
          file: ./API-jokes/Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build-image-react:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Add details to image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.REACT_IMAGE_NAME }}
          tags: |
            latest
            v1.0.${{ github.run_number }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./react-client
          file: ./react-client/Dockerfile.prod
          push: true
          build-args: |
            VITE_API_BASE_URL=http://Docker-Course-LB-01-784454599.eu-central-1.elb.amazonaws.com
          tags: ${{ steps.meta.outputs.tags }}

  deploy-to-ecs:
    runs-on: ubuntu-latest
    needs: [build-image-node, build-image-react]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Modify ECS task definition for node app
        id: task-def-node
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.ECS_CONTAINER_NODE_NAME }}
          image: ${{ env.DOCKER_USERNAME }}/${{ env.NODE_IMAGE_NAME }}
      - name: Modify ECS task definition for react app
        id: task-def-react
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-node.outputs.task-definition }}
          container-name: ${{ env.ECS_CONTAINER_REACT_NAME }}
          image: ${{ env.DOCKER_USERNAME }}/${{ env.REACT_IMAGE_NAME }}
      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def-react.outputs.task-definition }}
          service: ${ env.ECS_SERVICE_NAME }
          cluster: ${ env.ECS_CLUSTER_NAME }
